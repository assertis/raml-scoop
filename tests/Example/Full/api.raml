#%RAML 0.8
title: Product API
version: v1
baseUri: http://product.scoop/api

documentation:
 - title: Licence
   content: |
     Please see
     [our full licence](https://en.wikipedia.org/wiki/Software_license)
     for details on how you can use the API.
 - title: Introduction
   content: |
     Welcome to the _Product API_ Documentation. The _Product API_
     allows you to connect your application to our e-commerce service
     and perform transactions without going through the web interface.
     
/orders:
  displayName: Order management
  get:
    description: Get a list of orders ordered by date descending.
    queryParameters:
      page:
        description: Specify the page that you want to retrieve
        type: integer
        required: true
        example: 1
      per_page:
        type: integer    
  post:
    description: Create a new order
    headers:
      X-Auth-Token:
        displayName: Authentication header
        description: Must be a specially prepared, signed *JSON* object.
        type: string
        required: true
        pattern: ^[a-z0-9]{32}$
    body:
      application/json:
        example: !include CreateRequest.json
        schema: !include CreateRequest.jschema
    responses:
      201:
        headers:
          Location:
            displayName: URI of the created order.
            description: |
              You can use the returned URI as a reference to the newly created order right away,
              _however_ the contents might need to settle before being able to fetch it.              
            type: string
            required: true
            minLength: 10
            maxLength: 200
            example: /order/123
        body:
          application/json:
            example: !include CreateResponse.json
            schema: !include ResponseWithData.jschema
      400:
        body:
          application/json:
            schema: !include ResponseWithValidationErrors.jschema
  /{id}:
    displayName: Fetch a particular order
    baseUriParameters:
      id:
        type: string
        pattern: ^\d+$
    get:
      responses:
        200:
          body:
            application/json:
              example: !include ReadResponse.json
              schema: !include ReadResponse.jschema
        404:
          body:
            application/json:
              schema: !include ResponseWithError.jschema
