#!/usr/bin/env php
<?php
declare(strict_types=1);

// Inspired by https://github.com/php-pds/skeleton

use Assertis\RamlScoop\Command\GenerateCommand;
use Assertis\RamlScoop\Configuration\ConfigurationResolver;
use Assertis\RamlScoop\Schema\ProjectReader;
use Assertis\RamlScoop\Schema\SchemaReader;
use Assertis\RamlScoop\Tools\FlexibleFileLocator;
use Pimple\Container;
use Symfony\Component\Console\Application;

if (file_exists($autoloadFile = __DIR__ . '/../vendor/autoload.php')) {
    require $autoloadFile;
} elseif (file_exists($autoloadFile = __DIR__ . '/../../../autoload.php')) {
    require $autoloadFile;
} else {
    echo "Autoload file not found; try 'composer dump-autoload' first." . PHP_EOL;
    exit(1);
}

$di = new Pimple\Container();

$di['app.commands'] = [
    GenerateCommand::class    
];

$di['dir.current'] = getcwd();
$di['dir.root'] = realpath(dirname(__DIR__));
$di['dir.config'] = $di['dir.root'] . '/config';

$di[Application::class] = function (Container $di) {
    $app = new Application();
    
    foreach ($di['app.commands'] as $class) {
        $app->add($di[$class]);
    }

    return $app;
};

$di[ConfigurationResolver::class] = function (Container $di) {
    return new ConfigurationResolver($di['dir.config'], $di['dir.current']);
};

$di[SchemaReader::class] = function (Container $di) {
    $locator = new FlexibleFileLocator([$di['dir.current']]);

    return new SchemaReader($locator);
};

$di[ProjectReader::class] = function (Container $di) {
    return new ProjectReader($di[SchemaReader::class]);
};

$di[GenerateCommand::class] = function (Container $di) {
    return new GenerateCommand(
        $di[ConfigurationResolver::class],
        $di[ProjectReader::class]
    );
};

exit($di[Application::class]->run());
